# Maven Archetype

Maven archetypes act as templates for new projects, defining a series of dependencies and configurations, along an initial structure of folders and files.

This way it is possible to quickly create a blank project ready for any kind of job. As long as Maven is part of your needs.

# Why this library?

I set up all my java projects in a similar way, and I always use Maven for them. Still, this didn't make it easier creating a new project, on the contrary, it meant hunting down the reusable files. And I never got them all on the first attempt.

But I didn't need just a bunch of files, I needed a project ready to work with the development cycle I usually apply to Java projects, which requires connecting various repositories, all of them connected through a continuous integration service.

So I researched a bit, and found the best solution to my problems: building my own archetype. Which is not exactly a general use archetype. As I've commented, it is prepared for my own tastes, so some decisions may be a bit too personal, but still I've tried to make is as generic and reusable as possible.

---

# An overview

Several features are offered by the archetype, the most important being:

- Unit and integration tests ready to be run with TestNG [>>](./tests.html)
- Making use of Travis to publish code and documentation artifacts [>>](./travis.html)
- Maven site, using the Reflow skin, for the documentation and reports [>>](./site.html)
- A basic readme template.
- A basic gitignore file.

For configuration, the archetype makes use of a series of properties which can be set during the creation of a new project [>>](./usage.html)

Also, pay attention to the project life cycle I meant this archetype for, which will make it easier to understand [>>](./lifecycle.html)

---

# About the code

The code is open source and freely accessible. If you want to do any kind of modification just fork it from the repository.

- Java version: ${javaVersion}
- License: [${license}](./license.html)
- SCM: [${scmName}](${scmURL})
- CI: [${ciName}](${ciURL})